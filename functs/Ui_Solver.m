function [X, out] = Ui_Solver(A, shape, opts)
    % This function solves
    %    min     V(x)' * A * V(x)
    %    s.t.    X is unitary matrix
    % where X is the matrix of r * I, generated by the left unfolding of a
    % 3 order tensor r_{i-1} * Ii * ri
    if length(shape)==2
        shape(3)=1;
    end
    x = eye(shape(1) * shape(2), shape(3));
    [X, out]= OptStiefelGBB(x, @ProblemUnitary, opts, A);
    X = reshape(X, shape);
end

function [f, g] = ProblemUnitary(x, A)
    % x is a matrix (R_{i-1}I_i) * R_i
    f = T2V(x)' * A * T2V(x);
    g = reshape(2 * T2V(x)' * A, size(x));
end